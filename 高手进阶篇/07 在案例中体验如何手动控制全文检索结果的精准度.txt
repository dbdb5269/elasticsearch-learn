1、为帖子数据增加标题字段

POST /forum/article/_bulk
{"update" : {"_id" : "1"}}
{"doc" : {"title" : "this is java and elasticsearch blog"}}
{"update" : {"_id" : "2"}}
{"doc" : {"title" : "this is java blog"}}
{"update" : {"_id" : "3"}}
{"doc" : {"title" : "this is elasticsearch blog"}}
{"update" : {"_id" : "4"}}
{"doc" : {"title" : "this is java, elasticsearch, hadoop blog"}}
{"update" : {"_id" : "5"}}
{"doc" : {"title" : "this is spark blog"}}

2、搜索标题中包含java或elasticsearch的blog

这个就跟之前的term query不一样了。不是搜索exact value，是进行full text全文检索。

match query，是负责进行全文检索的。当然，如果要检索的field，是keyword类型的，那么match query也相当于term query。

GET /forum/article/_search
{
  "query": {
    "match": {
      "title": "java elasticsearch"
    }
  }
}

3、搜索标题中包含java和elasticsearch的blog

搜索结果精准控制的第一步，灵活使用and关键字，如果你是希望所有的搜索关键字都要匹配的，那么就用and，可以实现单纯match query无法实现的效果

GET forum/article/_search
{
  "query": {
    "match": {
      "title": {
        "query" : "java elasticsearch",
        "operator": "and"
      }
    }
  }
}

4、搜索包含java，elasticsearch，spark，hadoop，4个关键词中，至少3个的blog

控制搜索结果的精准度的第二步，指定一些关键字中，必须至少匹配其中的多少个关键字，才能作为结果返回

GET forum/article/_search
{
  "query": {
    "match": {
      "title": {
        "query": "java elasticsearch spark hadoop",
        "minimum_should_match" : "75%"
      }
    }
  }
}

5、用bool组合多个搜索条件，来搜索title
GET forum/article/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "title": "java"
          }
        }
      ],
      "must_not": [
        {
          "match": {
            "title": "spark"
          }
        }
      ],
      "should": [
        {
          "match": {
          "title": "hadoop"
          }
        },
        {
          "match": {
            "title": "elasticsearch"
          }
        }
      ]
    }
  }
}

6、bool组合多个搜索条件，如何计算相关度分数

匹配到多的在前面，少的在后面

7、搜索java，hadoop，spark，elasticsearch，至少包含其中3个关键字

默认情况下（should和must一起用的情况），should是可以不匹配任何一个的；
但是有个例外情况，如果没有must的话，那么should中必须至少匹配一个才可以

GET /forum/article/_search
{
  "query": {
    "bool": {
      "should": [
        {"match": {
          "title": "java"
        }},
        {"match": {
          "title": "elasticsearch"
        }},
        {"match": {
          "title": "hadoop"
        }},
        {"match": {
          "title": "spark"
        }}
      ],
      "minimum_should_match": 3
    }
  }
}

8、梳理一下
（1）全文检索的时候，进行多个值的检索，有两种做法，match query和should
（2）控制搜索结果精准度，operator: and|minimum_should_match