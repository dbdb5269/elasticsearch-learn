1、consistency，one（primary shard），all（all shard），quorum（default）

我们在发送任何一个增删改操作的时候，比如说PUT /index/type/id，都可以带上一个consistency参数，指明我们想要的写一致性是什么？

PUT /index/type/id?consistency=quorum

one：要求我们这个写操作，只要primary shard是active活跃可用的，就可以执行
all：要求我们这个写操作，必须所有的primary shard和replica shard都是活跃的，才可以执行这个写操作
quorum：默认的值，要求所有的shard中，必须是大部分的shard都是活跃可用的，才可以执行这个写操作。

如果shard总共有3primary、3replica时，那么总共要求有3个shard是活跃的，才可以执行写操作。

写一致性  quorum代表必须大多数都可以才行

2、quorum机制，写之前必须确保大多数shard都可用

quorum = int( (primary + number_of_replicas) / 2 ) + 1

举个例子：3个primary shard，number_of_replicas=1，共有3 + 3*1 = 6shards

quorum = (3 + 1) / 2 + 1 = 3

所以要求6个shard中至少有3个shard是active状态的，才可以执行写操作。

3、如果节点数少于quorum数量，可能导致quorum不齐全，进而导致无法执行任何写操作。

3个primary shard，number_of_replicas=1，要求3个shard是active，3个shard按照之前学习的shard&replica机制，必须在不同的节点上，如果说只有1台机器的话，是不是有可能出现说，3个shard都没法分配齐全，此时就可能会出现写操作无法执行的情况。

ES提供了一种特殊的处理场景，就是说当number_of_replica > 1时才执行quorum这种限制，
因为假如说，你就1个primary shard，number_of_replica = 1，此时就2个shard
((1+1)/2) + 1 = 2 要求必须有2个shard是活跃的，但是可能就1个node，此时就1个shard是活跃的，如果不做特殊处理的话，导致我们的单节点集群无法工作

4、quorum不齐全时，wait，默认1分钟，不行的话会timeout

等待期间，期望活跃的shard数量可以增加，最后实在不行，就会timeout
我们其实可以在写操作的时候，加一个timeout参数，比如
PUT /index/type/id?timeout=30
这个就是说自己去设定quorum不齐全的时候，es的timeout时间，可以缩短，也可以延长
timeout单位默认是毫秒，不过可以后面加s变成秒
例如：30 就是30毫秒 ；30s就是30秒