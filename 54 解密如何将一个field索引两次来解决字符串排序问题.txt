1、如果对一个string field进行排序，结果往往不准确，因为分词后是多个单词，再排序就不是我们想要的结果了

通常的解决方案是，将一个string field建立两次索引，一个分词，用来搜索；一个不分词，用来进行排序

uninverting the inverted index  缺少正排索引


PUT /website
{
  "mappings": {
    "article": {
      "properties": {
        "title" : {
          "type": "text",
          "fields": {
            "raw" : {
              "type": "keyword"
            }
          },
          "fielddata": true
        },
      "content" : {
        "type": "text"
      },
      "post_date" : {
        "type": "date"
      },
      "author_id" : {
        "type": "long"
      }
      }
    }
  }
}

fielddata: true 表示有正排索引

GET website/article/_search
{
  "query": {
    "match_all": {}
  },
  "sort": [
    {
      "title.raw": {
        "order": "desc"
      }
    }
  ]
}

{
  "took": 0,
  "timed_out": false,
  "_shards": {
    "total": 5,
    "successful": 5,
    "failed": 0
  },
  "hits": {
    "total": 3,
    "max_score": null,
    "hits": [
      {
        "_index": "website",
        "_type": "article",
        "_id": "3",
        "_score": null,
        "_source": {
          "title": "third article",
          "content": "this is my third article",
          "post_date": "2017-03-01",
          "author_id": 110
        },
        "sort": [
          "third article" 如果不用title.raw的话，是拆成third排序
        ]
      },
      {
        "_index": "website",
        "_type": "article",
        "_id": "1",
        "_score": null,
        "_source": {
          "title": "second article",
          "content": "this is my second article",
          "post_date": "2017-01-01",
          "author_id": 110
        },
        "sort": [
          "second article" 如果不用title.raw的话，是拆成second排序
        ]
      },
      {
        "_index": "website",
        "_type": "article",
        "_id": "2",
        "_score": null,
        "_source": {
          "title": "first article",
          "content": "this is my first article",
          "post_date": "2017-02-01",
          "author_id": 110
        },
        "sort": [
          "first article"  如果不用title.raw的话，是拆成first排序
        ]
      }
    ]
  }
}