type，是一个index中用来区分类似的数据的，类似的数据，但是可能有不同的fields，而且有不同的属性来控制索引建立、分词器
field的value，在底层lucene中建立索引的时候，全都是opaque bytes类型，不区分类型的
lucene是没有type的概念的，在document中，实际上将type作为一个document的field来存储，即_type，es通过_type来进行type的过滤和筛选
一个index钟的多个type，实际上是放在一起存储的，因此一个index下，不能有多个type重名，而类型或者其他设置不同的，因为那样是无法处理的


生鲜商品type
{
	"name" : "澳洲大龙虾",
	"price" : 199.0,
	"eat_period" : "one week"
}

电器商品type
{
	"name" : "格力空调",
	"price" : 1999.0,
	"eat_period" : "one year"
}

实际底层存储：
{
	"_type" : "fresh_goods"
	"name" : "澳洲大龙虾",
	"price" : 199.0,
	"eat_period" : "one week",
	"service_period" : "" 
}

{
	"_type" : "elactronic_goods"
	"name" : "格力空调",
	"price" : 1999.0,
	"eat_period" : "",
	"service_period" : "one year" 
}

实际的mapping是这样的
{
	"ecommerce" : {
		"mappings" : {
			"_type" : {
				"type" : "keyword"
			},
			"name" : {
				"type" : "text"
			},
			"price" : {
				"type" : "double"
			},
			"service_period" : {
				"type" : "text"
			},
			"eat_period" : {
				"type" : "text"
			}
		}
	}
}

最佳实践，将类似结构的type放在一个index下，这些type应该有多个field是相同的
假如说，你将两个type的field完全不同，放在一个index下，那么就每条数据都至少有一半的field在底层lucene中是空值，会有严重的性能问题